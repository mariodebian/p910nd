Description: Use get_ip_str instead of inet_ntoa (struct sockaddr_storage don't have sin_addr or sin_port)

Index: p910nd/p910nd.c
===================================================================
--- p910nd.orig/p910nd.c	2011-02-15 13:15:43.203741337 +0100
+++ p910nd/p910nd.c	2011-02-15 13:16:38.558741124 +0100
@@ -571,15 +571,15 @@
 	clientlen = sizeof(client);
 	memset(&client, 0, sizeof(client));
 	while ((fd = accept(netfd, (struct sockaddr *)&client, &clientlen)) >= 0) {
+		char host[INET6_ADDRSTRLEN];
 #ifdef	USE_LIBWRAP
-		if (hosts_ctl("p910nd", STRING_UNKNOWN, inet_ntoa(client.sin_addr), STRING_UNKNOWN) == 0) {
+		if (hosts_ctl("p910nd", STRING_UNKNOWN, get_ip_str((struct sockaddr *)&client, host, sizeof(host)), STRING_UNKNOWN) == 0) {
 			syslog(LOGOPTS,
-			       "Connection from %s port %hu rejected\n", inet_ntoa(client.sin_addr), ntohs(client.sin_port));
+			       "Connection from %s port %hu rejected\n", get_ip_str((struct sockaddr *)&client, host, sizeof(host)), get_port((struct sockaddr *)&client));
 			close(fd);
 			continue;
 		}
 #endif
-		char host[INET6_ADDRSTRLEN];
 		syslog(LOG_NOTICE, "Connection from %s port %hu accepted\n", get_ip_str((struct sockaddr *)&client, host, sizeof(host)), get_port((struct sockaddr *)&client));
 		/*write(fd, "Printing", 8); */
 
